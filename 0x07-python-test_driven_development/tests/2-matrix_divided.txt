the ''2-matrix_divided'' module
===============================

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test: reg div:
    >>> matrix_divided([[3]], 3)
    [[1.0]]

test: neg diviser:
    >>> matrix_divided([[3, 6, 9], [12, 15, 18]], -3)
    [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

test: number as a char
    >>> matrix_divided([[4]], "4")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

test: div by 0
    >>> matrix_divided([[4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

test: char in matrix
    >>> matrix_divided([["3"]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test: matrix row of odd size
    >>> matrix_divided([[3, 4, 5], [3, 6]], 4)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

test: all float
    >>> matrix_divided([[3.3, 6.6]], 3)
    [[1.1, 2.2]]

test: no divider
    >>> matrix_divided([[3, 6], [9, 12]], )
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
